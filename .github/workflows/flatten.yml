name: Run flatten.py on new CSVs

on:
  push:
    paths:
      - "data/*.csv"
      - "data/**/*.csv"
  pull_request:
    paths:
      - "data/*.csv"
      - "data/**/*.csv"

jobs:
  run-flatten:
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # we need history to diff changed files

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      # If flatten.py needs deps, install them here (optional)
      # - name: Install dependencies
      #   run: |
      #     pip install -U pip
      #     pip install -r requirements.txt

      - name: Find changed CSVs
        id: changed
        shell: bash
        run: |
          set -e
          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
            BASE="${{ github.event.pull_request.base.sha }}"
            HEAD="${{ github.event.pull_request.head.sha }}"
          else
            BASE="${{ github.event.before }}"
            HEAD="${{ github.sha }}"
          fi

          # List CSVs added/modified under data/
          CHANGED=$(git diff --name-only "$BASE" "$HEAD" -- 'data/*.csv' 'data/**/*.csv' | tr '\n' ' ')
          echo "changed=$CHANGED" >> "$GITHUB_OUTPUT"

      - name: Run flatten.py for each changed CSV
        if: steps.changed.outputs.changed != ''
        shell: bash
        run: |
          set -e
          for f in ${{ steps.changed.outputs.changed }}; do
            echo "Processing $f"
            python flatten.py "$f"
          done
          
      - name: Nothing to do
        if: steps.changed.outputs.changed == ''
        run: echo "No new/updated CSVs in data/"

      # (Optional) Upload outputs if flatten.py writes results to a folder (e.g., build/)
      # - name: Upload artifacts
      #   if: steps.changed.outputs.changed != ''
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: flattened-output
      #     path: build/**
