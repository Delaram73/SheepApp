name: Run pipeline
on:
  push:
    paths: ["data/**"]
  schedule:
    - cron: "*/30 * * * *"
jobs:
  run:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - run: pip install -r requirements.txt
      - name: Process all CSV/GT3X in data/
        env:
          INFLUX_URL:    ${{ secrets.INFLUX_URL }}
          INFLUX_ORG:    ${{ secrets.INFLUX_ORG }}
          INFLUX_BUCKET: ${{ secrets.INFLUX_BUCKET }}
          INFLUX_TOKEN:  ${{ secrets.INFLUX_TOKEN }}
        run: |
          python - <<'PY'
          import glob, os, pandas as pd, tempfile, shutil
          from pipeline.gt3x_to_csv import gt3x_to_df
          from pipeline.flatten import flatten_xyz
          from pipeline.predict import predict_labels, write_behaviour_to_influx
          MODEL_PATH="models/sheep_blstm_model.h5"
          LABELS=["grazing","lying","mating","running","standing","walking","head-butting","flehmen"]

          for path in glob.glob("data/**/*", recursive=True):
              if path.lower().endswith(".gt3x"):
                  df = gt3x_to_df(path)
              elif path.lower().endswith(".csv"):
                  df = pd.read_csv(path)
              else:
                  continue

              if "Time" not in df.columns and "time" in df.columns:
                  df = df.rename(columns={"time":"Time"})

              dff = flatten_xyz(df, seq_len=30)
              out = predict_labels(dff, MODEL_PATH, LABELS)
              n = write_behaviour_to_influx(
                    out,
                    url=os.environ["INFLUX_URL"],
                    org=os.environ["INFLUX_ORG"],
                    bucket=os.environ["INFLUX_BUCKET"],
                    token=os.environ["INFLUX_TOKEN"])
              print(f"Wrote {n} points from {path}")
          PY

